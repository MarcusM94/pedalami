{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "PedalaMi",
    "description": "PedalaMi: cycling and having fun in your city"
  },
  "basePath": "/api/",
  "tags": [
    {
      "name": "Users"
    }
  ],
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users/initUser": {
      "post": {
        "summary": "Create new user or retrieve exixting one",
        "tags": [
          "Users"
        ],
        "description": "Create new user or retrieve exixting one",
        "parameters": [
          {
            "in": "body",
            "name": "Request",
            "description": "ID of the user",
            "schema": {
              "properties": {
                "userId": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User saved correctly!",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Missing parameters"
          },
          "500": {
            "description": "Error saving the user"
          }
        }
      }
    },
    "/teams/create": {
      "post": {
        "summary": "Create new team",
        "tags": [
          "Teams"
        ],
        "description": "Create new team",
        "parameters": [
          {
            "in": "body",
            "name": "Request",
            "description": "Data of the team that we want to create",
            "schema": {
              "properties": {
                "adminId": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Team saved correctly!",
            "schema": {
              "properties": {
                "teamId": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Missing parameters"
          },
          "500": {
            "description": "Error saving the team"
          }
        }
      }
    },
    "/teams/search": {
      "get": {
        "tags": [
          "Teams"
        ],
        "summary": "Get all the teams whose name contains the one provided",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string",
            "description": "(Part of) the name of the team"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArrayTeamWithoutJoinedMembers"
            }
          },
          "400": {
            "description": "Missing parameters"
          },
          "500": {
            "description": "Error while searching the teams"
          }
        }
      }
    },
    "/teams/join": {
      "post": {
        "summary": "Join team",
        "tags": [
          "Teams"
        ],
        "description": "Join team",
        "parameters": [
          {
            "in": "body",
            "name": "Request",
            "description": "Team id and id of the user who wants to join",
            "schema": {
              "properties": {
                "teamId": {
                  "type": "string"
                },
                "userId": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Team saved correctly!"
          },
          "400": {
            "description": "Missing parameters"
          },
          "500": {
            "description": "Error saving the team"
          }
        }
      }
    },
    "/teams/leave": {
      "post": {
        "summary": "Leave team",
        "tags": [
          "Teams"
        ],
        "description": "Leave team",
        "parameters": [
          {
            "in": "body",
            "name": "Request",
            "description": "Team id and id of the user who wants to leave",
            "schema": {
              "properties": {
                "teamId": {
                  "type": "string"
                },
                "userId": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Team leaved correctly"
          },
          "400": {
            "description": "Missing parameters"
          },
          "500": {
            "description": "Error saving the team"
          }
        }
      }
    },
    "/teams/getTeam": {
      "get": {
        "tags": [
          "Teams"
        ],
        "summary": "Get all the info of a team given its identifier",
        "parameters": [
          {
            "in": "query",
            "name": "teamId",
            "type": "string",
            "description": "Id of the team"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TeamWJoinedMembers"
            }
          },
          "400": {
            "description": "Missing parameters"
          },
          "500": {
            "description": "Error while searching the teams"
          }
        }
      }
    },
    "/rewards/redeem": {
      "post": {
        "summary": "Redeem a reward",
        "tags": [
          "Rewards"
        ],
        "description": "Redeem a reward",
        "parameters": [
          {
            "in": "body",
            "name": "Request",
            "description": "Let the user redeem a reward if he has enough points",
            "schema": {
              "properties": {
                "rewardId": {
                  "type": "string"
                },
                "userId": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Reward redeemed correctly",
            "schema": {
              "$ref": "#/definitions/RedeemedReward"
            }
          },
          "400": {
            "description": "Missing parameters"
          },
          "500": {
            "description": "Error saving the team"
          }
        }
      }
    },
    "/rewards/list": {
      "get": {
        "tags": [
          "Rewards"
        ],
        "summary": "Get the list of all the available rewards",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArrayRewards"
            }
          },
          "400": {
            "description": "Missing parameters"
          },
          "500": {
            "description": "Error while searching the teams"
          }
        }
      }
    },
    "/rewards/getByUser": {
      "get": {
        "tags": [
          "Rewards"
        ],
        "summary": "Get all the rewards that a user has redeemed",
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "type": "string",
            "description": "Id of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArrayRedeemedRewards"
            }
          },
          "400": {
            "description": "Missing parameters"
          },
          "500": {
            "description": "Error while getting the rewards"
          }
        }
      }
    },
    "/rides/record": {
      "post": {
        "tags": [
          "Rides"
        ],
        "summary": "Record a ride",
        "parameters": [
          {
            "in": "body",
            "name": "Request",
            "description": "Let the user record a ride",
            "schema": {
              "$ref": "#/definitions/BaseRide"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "points": {
                  "type": "number"
                },
                "pace": {
                  "type": "number"
                }
              }
            }
          },
          "400": {
            "description": "Missing parameters"
          },
          "500": {
            "description": "Error while searching the teams"
          }
        }
      }
    },
    "/rides/getAllByUser": {
      "get": {
        "tags": [
          "Rides"
        ],
        "summary": "Get all the rides that a user has recorded",
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "type": "string",
            "description": "Id of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RidesArray"
            }
          },
          "400": {
            "description": "Missing parameters"
          },
          "500": {
            "description": "Error while getting the rewards"
          }
        }
      }
    }
  },
  "definitions": {
    "BaseRide": {
      "properties": {
        "userId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "durationInSeconds": {
          "type": "number"
        },
        "totalKm": {
          "type": "number"
        },
        "date": {
          "type": "string"
        },
        "elevationGain": {
          "type": "number"
        },
        "path": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeoPoint"
          }
        }
      }
    },
    "FullRide": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string"
            },
            "points": {
              "type": "number"
            },
            "pace": {
              "type": "number"
            }
          }
        },
        {
          "$ref": "#/definitions/BaseRide"
        }
      ]
    },
    "RidesArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/FullRide"
      }
    },
    "Badge": {
      "properties": {
        "criteria": {
          "type": "string"
        },
        "criteriaValue": {
          "type": "number"
        },
        "image": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "Statistics": {
      "properties": {
        "numberOfRides": {
          "type": "number"
        },
        "totalDuration": {
          "type": "number"
        },
        "totalKm": {
          "type": "number"
        },
        "totalElevationGain": {
          "type": "number"
        },
        "averageSpeed": {
          "type": "number"
        },
        "averageDuration": {
          "type": "number"
        },
        "averageKm": {
          "type": "number"
        },
        "averageElevationGain": {
          "type": "number"
        }
      }
    },
    "User": {
      "properties": {
        "userId": {
          "type": "string"
        },
        "points": {
          "type": "integer",
          "default": 0
        },
        "badges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Badge"
          }
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TeamWJoinedMembers"
          }
        },
        "statistics": {
          "$ref": "#/definitions/Statistics"
        },
        "rewards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RedeemedReward"
          }
        }
      }
    },
    "TeamWJoinedMembers": {
      "properties": {
        "_id": {
          "type": "string"
        },
        "adminId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BasicUser"
          }
        }
      }
    },
    "TeamWithoutJoinedMembers": {
      "properties": {
        "_id": {
          "type": "string"
        },
        "adminId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "active_events": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "event_requests": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "BasicUser": {
      "properties": {
        "userId": {
          "type": "string"
        },
        "points": {
          "type": "integer",
          "default": 0
        },
        "badges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Badge"
          }
        },
        "statistics": {
          "$ref": "#/definitions/Statistics"
        }
      }
    },
    "GeoPoint": {
      "properties": {
        "latitude": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        }
      }
    },
    "Path": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/GeoPoint"
      }
    },
    "Reward": {
      "properties": {
        "price": {
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "image": {
          "type": "string"
        }
      }
    },
    "RedeemedReward": {
      "properties": {
        "price": {
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "redeemedDate": {
          "type": "string"
        },
        "rewardContent": {
          "type": "string"
        }
      }
    },
    "ArrayRedeemedRewards": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/RedeemedReward"
      }
    },
    "ArrayRewards": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Reward"
      }
    },
    "ArrayTeamWithoutJoinedMembers": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/TeamWithoutJoinedMembers"
      }
    },
    "BaseEvent": {
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "startDate": {
          "type": "string"
        },
        "endDate": {
          "type": "string"
        },
        "closed": {
          "type": "boolean"
        },
        "type": {
          "type": "string"
        },
        "visibility": {
          "type": "string"
        }
      }
    },
    "BaseEventWId": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string"
            }
          }
        },
        {
          "$ref": "#/definitions/BaseEvent"
        }
      ]
    },
    "ScoreboardEntryOfIndividualEvent": {
      "properties": {
        "userId": {
          "type": "string"
        },
        "points": {
          "type": "number"
        }
      }
    },
    "ScoreboardEntryOfTeamEvent": {
      "properties": {
        "userId": {
          "type": "string"
        },
        "teamId": {
          "type": "string"
        },
        "points": {
          "type": "number"
        }
      }
    },
    "IndividualEvent": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseEventWId"
        },
        {
          "type": "object",
          "properties": {
            "scoreboard": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScoreboardEntryOfIndividualEvent"
              }
            }
          }
        }
      ]
    }
  }
}